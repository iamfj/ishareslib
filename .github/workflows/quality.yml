name: Quality Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  linter:
    name: Run Linter
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pip
        run: pip install --user --upgrade pip
      - name: Install Dependencies
        run: pip install -e .[test]
      - name: Run Flake8 Linter on Project Files
        run: flake8 ${{ github.event.repository.name }}
      - name: Run Black Linter on Project Files
        run: black --check ${{ github.event.repository.name }}
      - name: Run Black Linter on Test Files
        run: black --check tests
      - name: Run ISort Linter on Project Files
        run: isort --check-only --profile black ${{ github.event.repository.name }}
      - name: Run ISort Linter on Test Files
        run: isort --check-only --profile black tests
      - name: Run MyPy Linter on Project files
        run: mypy ${{ github.event.repository.name }}

  tests:
    name: Run Tests
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
        os:
          - "windows-latest"
          - "ubuntu-latest"
          - "macos-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pip
        run: pip install --user --upgrade pip
      - name: Install Dependencies
        run: pip install -e .[test]
      - name: Run tests
        run: pytest -v --cov-config .coveragerc --cov=${{ github.event.repository.name }} -l --tb=long tests/
      - name: Validate Coverage over 90%
        run: coverage report --fail-under=90
      - name: Generate Coverage Report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10' && github.event_name != 'workflow_dispatch'
        run: |
          coverage xml
          coverage html
      - name: Upload Coverage Report to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10' && github.event_name != 'workflow_dispatch'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
